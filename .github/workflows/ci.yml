name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: restaurant_analytics_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1.2'
        bundler-cache: true

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev

    - name: Install gems
      run: bundle install

    - name: Setup test database
      env:
        RAILS_ENV: test
        DATABASE_HOST: localhost
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: password
        DATABASE_PORT: 5432
      run: |
        bundle exec rails db:create
        bundle exec rails db:schema:load

    - name: Run RuboCop
      run: bundle exec rubocop

    - name: Run tests
      env:
        RAILS_ENV: test
        DATABASE_HOST: localhost
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: password
        DATABASE_PORT: 5432
        REDIS_URL: redis://localhost:6379/0
      run: bundle exec rspec

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t restaurant-analytics-api:${{ github.sha }} .
        docker build -t restaurant-analytics-api:latest .

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker image
      run: |
        docker tag restaurant-analytics-api:${{ github.sha }} ghcr.io/${{ github.repository }}:${{ github.sha }}
        docker tag restaurant-analytics-api:latest ghcr.io/${{ github.repository }}:latest
        docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
        docker push ghcr.io/${{ github.repository }}:latest

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1.2'
        bundler-cache: true

    - name: Run Brakeman security check
      run: bundle exec brakeman --no-progress --json --output brakeman-report.json

    - name: Upload Brakeman results
      uses: actions/upload-artifact@v4
      with:
        name: brakeman-security-report
        path: brakeman-report.json

  deploy-preview:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Deploy preview environment
      run: |
        echo "Deploying preview environment for PR #${{ github.event.number }}"
        # Add deployment logic here
        # This could include deploying to a staging environment
        # or creating a preview URL for the PR
