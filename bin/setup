#!/usr/bin/env ruby
require "fileutils"
require "shellwords"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args.shelljoin} failed ==")
end

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  puts "== Installing dependencies =="
  unless system("bundle check")
    puts "Installing gems..."
    system! "bundle install"
  end

  # Install JavaScript dependencies if using Node.js
  if File.exist?("package.json")
    puts "\n== Installing JavaScript dependencies =="
    system! "npm install"
  end

  puts "\n== Installing database dependencies =="
  system! "gem install pg -- --with-pg-config=/usr/local/bin/pg_config" if RUBY_PLATFORM =~ /darwin/

  puts "\n== Preparing database =="
  system! "bin/rails db:prepare"

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"

  puts "\n== Restarting application server =="
  system! "bin/rails restart"

  puts "\n== Setting up environment =="
  unless File.exist?(".env")
    puts "Creating .env file from env.example..."
    FileUtils.cp("env.example", ".env")
    puts "Please update .env with your actual configuration values"
  end

  puts "\n== Setting up Docker =="
  if system("which docker")
    puts "Building Docker images..."
    system! "docker-compose build"
    puts "Docker images built successfully!"
  else
    puts "Docker not found. Please install Docker to use containerized development."
  end

  puts "\n== Setup complete! =="
  puts "\nTo start the application:"
  puts "  docker-compose up -d"
  puts "  # or for local development:"
  puts "  bin/rails server"
  puts "\nTo run tests:"
  puts "  bin/rails test"
  puts "\nTo run the console:"
  puts "  bin/rails console"
end
